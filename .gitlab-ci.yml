variables:
  FRONTEND_DEPLOYMENT_FILE: "k8s/frontend-deployment.yaml"
  BACKEND_DEPLOYMENT_FILE: "k8s/backend-deployment.yaml"

default:
  tags:
    - aws-edgez-prd-k8s

stages: [validate, test, build, deploy]

include:
  - component: gitlab.netlight.com/components/opentofu/validate-plan-apply@2.6.1
    inputs:
      opentofu_version: 1.9.1
      root_dir: infra
      job_name_prefix: "aws-"
  - component: $CI_SERVER_FQDN/components/docker-build/buildkit@1.2.0
    inputs:
      tags: aws-edgez-prd-k8s
      name: simplesim-backend
      job_prefix: backend-
      dockerfile: Dockerfile.backend
      environment: prod
  - component: $CI_SERVER_FQDN/components/docker-build/buildkit@1.2.0
    inputs:
      tags: aws-edgez-prd-k8s
      name: simplesim-frontend
      job_prefix: frontend-
      dockerfile: Dockerfile.frontend
      environment: prod

update-k8s-image-tags:
  stage: deploy
  image: alpine/git:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: manual
  before_script:
    - apk add --no-cache sed
    - git config --global user.email "gitlab-ci@example.com"
    - git config --global user.name "GitLab CI"
  script:
    - |
      echo "Current commit SHA: $CI_COMMIT_SHA"
    - |
      echo "Short commit SHA: $CI_COMMIT_SHORT_SHA"

    # Update frontend deployment file
    - echo "Updating frontend deployment..."
    - |
      sed -i -E 's|(723216754178\.dkr\.ecr\.eu-west-1\.amazonaws\.com/simplesim-frontend:)[^[:space:]]*|\1'$CI_COMMIT_SHORT_SHA'|g' $FRONTEND_DEPLOYMENT_FILE

    # Update backend deployment file
    - echo "Updating backend deployment..."
    - |
      sed -i -E 's|(723216754178\.dkr\.ecr\.eu-west-1\.amazonaws\.com/simplesim-frontend:)[^[:space:]]*|\1'$CI_COMMIT_SHORT_SHA'|g' $BACKEND_DEPLOYMENT_FILE

    # Show the changes
    - echo "=== Updated Frontend Deployment ==="
    - cat $FRONTEND_DEPLOYMENT_FILE
    - echo ""
    - echo "=== Updated Backend Deployment ==="
    - cat $BACKEND_DEPLOYMENT_FILE

    # Commit and push the changes back to the repository
    - git add $FRONTEND_DEPLOYMENT_FILE $BACKEND_DEPLOYMENT_FILE
    - |
      if ! git diff --staged --exit-code; then
        git commit -m "Update K8s image tags to $CI_COMMIT_SHORT_SHA [skip ci]"
        git push origin $CI_COMMIT_REF_NAME
        echo "Changes committed and pushed successfully"
      else
        echo "No changes to commit"
      fi

  artifacts:
    paths:
      - $FRONTEND_DEPLOYMENT_FILE
      - $BACKEND_DEPLOYMENT_FILE
    expire_in: 1 hour
    when: always
