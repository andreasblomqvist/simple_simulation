variables:
  DOCKER_BUILDKIT: 0

default:
  tags:
    - aws-edgez-prd-k8s

include:
  - component: gitlab.netlight.com/components/opentofu/validate-plan-apply@2.6.1
    inputs:
      opentofu_version: 1.9.1
      root_dir: infra
      job_name_prefix: "aws-"
  - component: $CI_SERVER_FQDN/components/docker-build/buildkit@1.2.0
    inputs:
      tags: aws-edgez-prd-k8s
      name: simplesim-backend
      job_prefix: backend-
      dockerfile: Dockerfile.backend
      environment: prod
  - component: $CI_SERVER_FQDN/components/docker-build/buildkit@1.2.0
    inputs:
      tags: aws-edgez-prd-k8s
      name: simplesim-frontend
      job_prefix: frontend-
      dockerfile: Dockerfile.frontend
      environment: prod

stages: [validate, build, test, deploy]

deploy:
  stage: deploy
  image: 
    name: bitnami/kubectl:latest
    entrypoint: [""]
  before_script:
    - export KUBECONFIG=/path/to/kubeconfig  # This should be set via CI/CD variables
  script:
    - |
      # Get the image digests from ECR
      BACKEND_DIGEST=$(aws ecr describe-images --repository-name simplesim-backend --image-ids imageTag=$CI_COMMIT_SHORT_SHA --query 'imageDetails[0].imageDigest' --output text)
      FRONTEND_DIGEST=$(aws ecr describe-images --repository-name simplesim-frontend --image-ids imageTag=$CI_COMMIT_SHORT_SHA --query 'imageDetails[0].imageDigest' --output text)
      
      # Update the deployment files with the new image digests
      sed -i "s|\${IMAGE_DIGEST}|$BACKEND_DIGEST|g" k8s/backend-deployment.yaml
      sed -i "s|\${IMAGE_DIGEST}|$FRONTEND_DIGEST|g" k8s/frontend-deployment.yaml
      
      # Apply the updated deployments
      kubectl apply -f k8s/backend-deployment.yaml
      kubectl apply -f k8s/frontend-deployment.yaml
      
      # Rollout status
      kubectl rollout status deployment/simplesim-backend -n simplesim
      kubectl rollout status deployment/simplesim-frontend -n simplesim
  only:
    - main
    - master
