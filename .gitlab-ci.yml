variables:
  DOCKER_BUILDKIT: 0

default:
  tags:
    - aws-edgez-prd-k8s

include:
  - component: gitlab.netlight.com/components/opentofu/validate-plan-apply@2.6.1
    inputs:
      opentofu_version: 1.9.1
      root_dir: infra
      job_name_prefix: "aws-"
  - component: $CI_SERVER_FQDN/components/docker-build/buildkit@1.2.0
    inputs:
      tags: aws-edgez-prd-k8s
      name: simplesim-backend
      job_prefix: backend-
      dockerfile: Dockerfile.backend
      environment: prod
  - component: $CI_SERVER_FQDN/components/docker-build/buildkit@1.2.0
    inputs:
      tags: aws-edgez-prd-k8s
      name: simplesim-frontend
      job_prefix: frontend-
      dockerfile: Dockerfile.frontend
      environment: prod

stages: [validate, build, test, deploy]

deploy:
  stage: deploy
  image: 
    name: amazon/aws-cli:latest
  script:
    - |
      # Install kubectl
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x kubectl
      mv kubectl /usr/local/bin/
      
      # First apply RBAC configuration
      echo "Applying RBAC configuration..."
      kubectl apply -f k8s/rbac.yaml
      
      # List available images and tags
      echo "Available backend images:"
      aws ecr describe-images --repository-name simplesim-backend --output text
      echo "Available frontend images:"
      aws ecr describe-images --repository-name simplesim-frontend --output text
      
      # Get the image digests from ECR
      BACKEND_DIGEST=$(aws ecr describe-images --repository-name simplesim-backend --image-ids imageTag=$CI_COMMIT_SHORT_SHA --output text --query 'imageDetails[0].imageDigest')
      FRONTEND_DIGEST=$(aws ecr describe-images --repository-name simplesim-frontend --image-ids imageTag=$CI_COMMIT_SHORT_SHA --output text --query 'imageDetails[0].imageDigest')
      
      echo "Backend image digest: $BACKEND_DIGEST"
      echo "Frontend image digest: $FRONTEND_DIGEST"
      
      # Update the deployment files with the new image digests
      sed -i "s|\${IMAGE_DIGEST}|$BACKEND_DIGEST|g" k8s/backend-deployment.yaml
      sed -i "s|\${IMAGE_DIGEST}|$FRONTEND_DIGEST|g" k8s/frontend-deployment.yaml
      
      echo "Updated backend deployment:"
      cat k8s/backend-deployment.yaml
      echo "Updated frontend deployment:"
      cat k8s/frontend-deployment.yaml
      
      # Apply the updated deployments
      kubectl apply -f k8s/backend-deployment.yaml
      kubectl apply -f k8s/frontend-deployment.yaml
      
      # Wait for rollouts to complete
      kubectl rollout status deployment/simplesim-backend -n simplesim
      kubectl rollout status deployment/simplesim-frontend -n simplesim
  tags:
    - aws-edgez-prd-k8s
  only:
    - main
    - master
